# This is a basic workflow to help you get started with Actions
name: 'Windows Build'

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
     tags:
      - '*'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        node-version: [20]

    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    steps:
    - name: Pull
      run: git clone "https://x-token-auth:$TOKEN@bitbucket.org/stalker_by/devops-pass-ai.git"
      env:
        TOKEN: "${{secrets.TOKEN}}"

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Download Jsign
      run: wget https://github.com/ebourg/jsign/releases/download/6.0/jsign-6.0.jar -O /tmp/jsign.jar

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Linux dependencies
      run: |
        sudo rm -f /etc/apt/sources.list.d/archive_uri-*
        sudo dpkg --add-architecture i386 && (sudo apt-get update || true)
        sudo apt-get install -y wine32 wine64

    - name: Install Dependencies
      run: cd devops-pass-ai && npm install

    - name: Build the app
      run: cd devops-pass-ai && npm run electron:build:win

    - name: Save PEM
      run: echo "${{ secrets.CODESIGN_PEM }}" | base64 -d > /tmp/full-chain.pem

    - name: Sign
      run: >
        java -jar /tmp/jsign.jar --storetype GOOGLECLOUD --keystore projects/devops-pass-ai/locations/europe-west1/keyRings/jsign --storepass "${{ secrets.GCP_ACCESS_TOKEN }}" --alias RTFM/cryptoKeyVersions/1 --certfile /tmp/full-chain.pem "$(ls -1 ${{ github.workspace }}/devops-pass-ai/release/devops-pass-ai*.exe)"

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          devops-pass-ai/release/*.exe
