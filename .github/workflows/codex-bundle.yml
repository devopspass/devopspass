name: 'Multiplatform Codex Bundle Release'

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-conda:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: macos-14
            arch: x86_64
            micromamba-platform: osx-64
          - os: macos-14-arm64
            arch: arm64
            micromamba-platform: osx-arm64
          - os: ubuntu-22.04
            arch: x86_64
            micromamba-platform: linux-64
          - os: windows-2022
            arch: x86_64
            micromamba-platform: win-64
      fail-fast: false

    steps:
    - name: Checkout Repository
      run: |
        git clone "https://x-token-auth:${{ secrets.TOKEN }}@bitbucket.org/stalker_by/devops-pass-ai.git"
        cd devops-pass-ai
        git checkout lint_fixes
        rm -Rf src/assets/codex/codex-bundle/ src/assets/codex/codex-bundle-*.tar.gz src/assets/codex/codex-bundle-*.zip

    - name: Cache Micromamba
      uses: actions/cache@v3
      with:
        path: ~/.micromamba
        key: ${{ runner.os }}-micromamba-${{ matrix.config.arch }}-${{ hashFiles('devops-pass-ai/src/assets/codex/codex.yml') }}
        restore-keys: |
          ${{ runner.os }}-micromamba-${{ matrix.config.arch }}-

    - name: Build Conda Bundle (macOS/Linux)
      if: matrix.config.os != 'windows-2022'
      run: |
        cd devops-pass-ai/src/assets/codex/
        # Download micromamba
        curl -L https://micro.mamba.pm/api/micromamba/${{ matrix.config.micromamba-platform }}/latest | tar -xvj bin/micromamba
        # Create conda env
        ./bin/micromamba env create -c conda-forge -f codex.yml -p ./codex-bundle-${{ matrix.config.arch }}/ --platform=${{ matrix.config.micromamba-platform }} --yes
        # Clean up
        ./bin/micromamba clean --all --yes
        # Tar the bundle
        tar -czf codex-bundle-${{ matrix.config.micromamba-platform }}-${{ github.sha }}.tar.gz codex-bundle-${{ matrix.config.arch }}/

    - name: Build Conda Bundle (Windows)
      if: matrix.config.os == 'windows-2022'
      shell: pwsh
      run: |
        cd devops-pass-ai/src/assets/codex/
        # Download micromamba
        Invoke-WebRequest -Uri https://micro.mamba.pm/api/micromamba/${{ matrix.config.micromamba-platform }}/latest -OutFile micromamba.tar.bz2
        tar -xjf micromamba.tar.bz2
        # Create conda env
        .\bin\micromamba.exe env create -c conda-forge -f codex.yml -p .\codex-bundle-${{ matrix.config.arch }}\ --platform=${{ matrix.config.micromamba-platform }} --yes
        # Clean up
        .\bin\micromamba.exe clean --all --yes
        # Create zip archive
        Compress-Archive -Path .\codex-bundle-${{ matrix.config.arch }}\ -DestinationPath codex-bundle-${{ matrix.config.micromamba-platform }}-${{ github.sha }}.zip

    - name: Upload Conda Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: conda-artifacts-${{ matrix.config.micromamba-platform }}
        path: |
          devops-pass-ai/src/assets/codex/codex-bundle-${{ matrix.config.micromamba-platform }}-${{ github.sha }}.tar.gz
          devops-pass-ai/src/assets/codex/codex-bundle-${{ matrix.config.micromamba-platform }}-${{ github.sha }}.zip
        retention-days: 1

  release:
    needs: build-conda
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download Conda Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: conda-artifacts-*
        merge-multiple: true

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/conda-artifacts-osx-64/codex-bundle-osx-64-*.tar.gz
          artifacts/conda-artifacts-osx-arm64/codex-bundle-osx-arm64-*.tar.gz
          artifacts/conda-artifacts-linux-64/codex-bundle-linux-64-*.tar.gz
          artifacts/conda-artifacts-win-64/codex-bundle-win-64-*.zip
